Enums, исключения.
Задание
1)
Написать метод, который будет выводить на консоль информацию о названии магазина в котором происходит покупка, о стоимости данной покупки. Об имени продавца, который продает товар, об имени покупателя, который покупает товар, название товара и возраст покупателя.

• Продавец может быть честным или нет.
• Если он честный и товар является алкогольным, то тогда он не продаст данный товар покупателю.
• Если он нечестный и товар является алкогольным, то тогда он продаст данный товар покупателю.
• Если у покупателя имеется скидочная карта, то цена покупки будет снижена на 10 процентов.
• Все поля классов должны быть приватными.
• Метод покупки принадлежит самому магазину.
• Свойство честности принадлежит только продавцу.
• Только покупатель может иметь скидочную карту.
Также метод, который необходимо реализовать для решения данной задачи, должен имплементировать функциональный интерфейс с таким же методом.

По итогу в классе Main должна быть прописана примерно такая логика:

Shop shop = new Shop();
shop.returnCost();
Конечно же с правильно заданными параметрами метода, и аргументами конструкторов.

А на консоль должно выводиться сообщение примерно следующее:

Уважаемый {Имя покупателя}, продавец {Имя продавца} нашего магазина “{Название магазина}”, продаст вам этот товар {Название товара}, в них есть алкогольная продукция, а ваш возраст {Возраст покупателя}. Стоимость вашей покупки равна {Стоимость покупки} Вот вам скидка

P.s. Сообщение для вывода напишите такое, какое пожелаете. Это просто пример. Плюс оно должно меняться в зависимости от параметра объектов, которые будут приниматься в метод.

2)
Создать метод, в котором создается одномерный массив типа int произвольного размера от 1 до 30, в котором каждому элементу массива присваивается произвольное значение от 0 до 30. Данный метод спрашивает у пользователя ввести с клавиатуры индекс случайно сгенерированного массива. Метод возвращает значение типа double, которое получается при делении элемента с указанным индексом пользователя на первый элемент данного массива.

Продумать все возможные исключительные ситуации, которые могут возникнуть в данном методе. Для каждой исключительной ситуации создать собственный класс checked исключения. Прописать в методе условия генерации данных исключений, а также указать их в сигнатуре данного метода.

Обработку исключения осуществить в сторонеем классе Main в котором нужно вызвать данный метод.

3)
Реализовать данную ситуацию в коде.

• Отцу у которого есть имя и определенная сумма в кармане должен сходить в магазин.
• В магазине есть 5 типов продуктов: яблоко, картошка, молоко, пиво и табак.
• У каждого товара есть своя цена.
• Отцу необходимо сделать покупку, максимум он может купить только два типа продуктов.
• Но любой тип продуктов может быть куплен в любом количестве.
Т.е. он может купить только молоко. Или купить 3 молока, и 2 яблока. Но он не может купить яблоко, три пива и две картофелины. Неприятная ситуация произойдет в нескольких ситуациях:

Если сумма покупки превышает количество денег в кармане отца.
Если он принесет домой пиво либо табак.
Если количество хотябы одного из купленных товаров не будет делиться на три. (т.е. он не сможет поровну разделить купленный продукт между собой, женой и ребенком)
Реализовать данную ситуацию при помощи объектно ориентированного подхода. Постараться использовать перечислительный тип данных Enum. А также исключения. Постараться обработать все исключения в стороннем методе, а не в теле метода созданного у отца.

В случае если отцу удасться избежать неприятной ситуации на консоль должно вывестись сообщение примерно такого типа:

Уважаемый Валентин стоимость ваших покупок 150. Вы приобрели APPLE в количестве 3, и MILK в количестве 6.